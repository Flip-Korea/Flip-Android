[versions]
androidGradlePlugin = "8.2.2"
androidxActivity = "1.8.2"
androidxComposeBom = "2024.04.00"
androidxComposeCompiler = "1.5.10"
androidxCore = "1.12.0"
androidxCoreSplashscreen = "1.0.1"
androidxHilt = "1.1.0"
androidxLifecycle = "2.7.0"
androidxNavigation = "2.7.7"
androidxRoom = "2.6.1"
androidxTestCore = "1.5.0"
androidxTestExt = "1.1.5"
androidxTestRunner = "1.5.2"
androidXArchCoreTest = "2.2.0"
coroutines = "1.8.0"
hilt = "2.50"
hiltJavax = "1"
junit = "4.13.2"
mockito = "4.8.0"
mockK = "1.13.11"
robolectric = "4.10.3"
kotlin = "1.9.22"
kotlinxDatetime = "0.4.1"
ksp = "1.9.22-1.0.18"
espresso-core = "3.5.1"
appcompat = "1.6.1"
material = "1.11.0"
retrofit = "2.9.0"
retrofitMock = "2.7.1"
okhttpMock = "4.10.0"
moshi = "1.12.0"
okhttp = "5.0.0-alpha.2"
androidxDataStore = "1.0.0"
coil-compose = "2.6.0"
googleId = "1.1.0"
googleGms = "4.4.1"
credentials = "1.2.2"
firebaseBom = "33.0.0"
kakaoSdk = "2.19.0"
material-icons-extended = "1.6.8"

[libraries]
# add
# 1. ui-graphics
# 2. espresso
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidxComposeCompiler" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3"}
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui"}
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4"}
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest"}
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling"}
androidx-compose-ui-util = { group = "androidx.compose.ui", name = "ui-util"}
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview"}
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "androidxCoreSplashscreen" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHilt" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidXArchCoreTest" }
androidx-test-core  = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
dagger-hilt-javax = { module = "javax.inject:javax.inject", version.ref="hiltJavax"}
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
junit = { module = "junit:junit", version.ref = "junit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric"}
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockK = { module = "io.mockk:mockk", version.ref = "mockK" }
mockK-android = { module = "io.mockk:mockk-android", version.ref = "mockK" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin"}
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofitMock" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
#androidx-dataStore-core = { group = "androidx.datastore", name = "datastore", version.ref = "androidxDataStore" }
androidx-dataStore-preference = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDataStore" }
okhttp-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttpMock" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil-compose" }
# Credentials(Login) & Firebase
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credentials" }
androidx-credentials-play-services-auth = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentials" }
googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleId" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
# Kakao SDK
kakao-sdk-v2-all = { module = "com.kakao.sdk:v2-all", version.ref = "kakaoSdk" }
kakao-sdk-v2-user = { module = "com.kakao.sdk:v2-user", version.ref = "kakaoSdk" }
kakao-sdk-v2-talk = { module = "com.kakao.sdk:v2-talk", version.ref = "kakaoSdk" }
kakao-sdk-v2-share = { module = "com.kakao.sdk:v2-share", version.ref = "kakaoSdk" }
kakao-sdk-v2-friend = { module = "com.kakao.sdk:v2-friend", version.ref = "kakaoSdk" }
kakao-sdk-v2-navi = { module = "com.kakao.sdk:v2-navi", version.ref = "kakaoSdk" }
kakao-sdk-v2-cert = { module = "com.kakao.sdk:v2-cert", version.ref = "kakaoSdk" }
androidx-material-icons-extended = {  group = "androidx.compose.material", name = "material-icons-extended"}

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
#kotlin-gradle-plugin = {module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin"}
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGms" }

[bundles]

